# The co-efficient for intercept B0 is -.035 and not significant
# we can tell the co-efficients are significant due to being less or more than 0.05 (p-value) and by the signif. codes in the desplay (***)
# yes the overall regression is significant, as the p-value fore the model is less than 0.05 or any threshold.
# RSE can be found at the bottom of the summary,
# Hwt = B1 * Bwt + B0 + e
summary(model.cats_)
plot(model.cats_)
plot(cars, xlab = "Speed in MPH", ylab = "Distance in Feet",
main = "Scatterplot of Cars Dataset")
abline(model, lty = 2)
model = lm(dist ~ speed, data = cars)
plot(cars, xlab = "Speed in MPH", ylab = "Distance in Feet",
main = "Scatterplot of Cars Dataset")
abline(model, lty = 2)
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cars Dataset")
abline(h = 0, lty = 2)
#Normality
qqnorm(model$residuals)
qqline(model$residuals)
qqnorm(model$residuals)
qqline(model$residuals)
plot(model.cats_)
model.cats_.bc <- boxcox(model.cats_)
model.cats_.bc.bc <- boxcox(model.cats_.bc)
View(model.cats_.bc)
View(model.cats_)
View(model.cats_)
bc = boxcox(model.cats_)
lambda = bc$x[which(bc$y == max(bx$y))]
lambda = bc$x[which(bc$y == max(bc$y))]
Hwt.bc = (cats_$Hwt^lambda - 1)/lambda
model.cats_.bc = lm(Hwt.bc ~ cats_$Bwt, cats_)
plot(model.cats_.bc)
boxcox(model.cats_.bc)
cats_ %>%
ggplot(., aes(x= Bwt, y= Hwt, color = Sex)) +
geom_point() +
geom_line()
cats_ %>%
ggplot(., aes(x= Bwt, y= Hwt, color = Sex)) +
geom_point() +
geom_smooth()
cats_ %>%
ggplot(., aes(x= Bwt, y= Hwt)) +
geom_point() +
geom_smooth()
cats_ %>%
ggplot(., aes(x= Bwt, y= Hwt)) +
geom_point() +
geom_smooth(formula = model.cats_)
cats_ %>%
ggplot(., aes(x= Bwt, y= Hwt)) +
geom_point() +
geom_smooth(formula = model.cats_)
cats_ %>%
ggplot(., aes(x= Bwt, y= Hwt)) +
geom_point() +
geom_line(data = model.cats_)
ggplot(cats_, aes(x= Bwt, y= Hwt)) +
geom_point() +
geom_line(data = model.cats_)
ggplot(cats_, aes(x= Bwt, y= Hwt)) +
geom_point() +
geom_line(data = model.cats_, color = 'blue')
ggplot(cats_, aes(x= Bwt, y= Hwt)) +
geom_point() +
geom_smooth(data = model.cats_, color = 'blue')
cats_ %>%
mutate(., my_model = predict(model.cats_)) %>%
ggplot(.) +
geom_point(aes(Bwt, Hwt)) +
geom_line(aes(Bwt, my_model))
cats_ %>%
mutate(., my_model = predict(model.cats_)) %>%
ggplot(.) +
geom_point(aes(Bwt, Hwt)) +
geom_line(aes(Bwt, my_model)) +
predict(model.cats_)
predict(model.cats_)
cats_ %>%
mutate(., my_model = predict(model.cats_)) %>%
ggplot(.) +
geom_point(aes(Bwt, Hwt)) +
geom_line(aes(Bwt, my_model))
cats_ %>%
mutate(., my_model = predict(model.cats_)) %>%
ggplot(.) +
geom_point(aes(Bwt, Hwt)) +
geom_line(aes(Bwt, my_model))
predict(model.cats_)
cats_ %>%
mutate(., my_model = predict(model.cats_))
cats_ %>%
mutate(., my_model = predict(model.cats_)) %>%
ggplot(.,aes(Bwt, Hwt)) +
geom_point() +
stat_smooth()
cats_ %>%
mutate(., my_model = predict(model.cats_)) %>%
ggplot(.,aes(Bwt, Hwt)) +
geom_point() +
stat_smooth(method = 'lm', color = 'red')
plot(cats_, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
plot(cats_, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
plot(cats_, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
plot(cats_, ylab= 'heart weight', main= 'scatter of cats dataset')
plot(cats_, main= 'scatter of cats dataset')
#abline(model.cats_, lty=2)
cars
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_, lty=2)
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_, newdata, interval = 'confidence')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_, lty=2)
lines(newdata$Bwt, conf.band[, 2], col = "blue")
lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, model.cats_, color = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_, lty=2)
lines(newdata$Bwt, conf.band[, 2], col = "blue")
lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, model.cats_, color = 'red')
View(model.cats_)
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, model.cats_(cats_$Bwt), color = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_, lty=2)
lines(newdata$Bwt, conf.band[, 2], col = "blue")
lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, model.cats_(cats_$Bwt), color = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_, lty=2)
lines(newdata$Bwt, conf.band[, 2], col = "blue")
lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, predict(model.cats_, cats_$Bwt), color = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_, lty=2)
lines(newdata$Bwt, conf.band[, 2], col = "blue")
lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, predict(model.cats_), color = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_, lty=2)
lines(newdata$Bwt, conf.band[, 2], col = "blue")
lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, predict(model.cats_), col = 'red')
boxcox(model.cats_)
?which()
conf.band
newdata = data.frame(Bwt= c(2.8, 5, 10))
conf.pred.interval = predict(model.cats_, newdata, interval = c('confidence','prediction'))
newdata = data.frame(Bwt= c(2.8, 5, 10))
conf.interval = predict(model.cats_, newdata, interval = 'confidence')
pred.interval = predict(model.cats_, newdata, interval = 'prediction')
conf.interval
pred.interval
boxcox(model.cats_)
bc = boxcox(model.cats_)
lambda = bc$x[which(bc$y == max(bc$y))]
Hwt.bc = (cats_$Hwt^lambda - 1)/lambda
model.cats_.bc = lm(Hwt.bc ~ cats_$Bwt)
plot(model.cats_.bc)
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_.bc, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_.bc, lty=2)
lines(newdata$Bwt, conf.band[, 2], col = "blue")
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_.bc, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_.bc, lty=2)
#lines(newdata$Bwt, conf.band[, 2], col = "blue")
#lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, predict(model.cats_), col = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_.bc, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=Hwt.bc, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_.bc, lty=2)
#lines(newdata$Bwt, conf.band[, 2], col = "blue")
#lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, predict(model.cats_), col = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_.bc, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=cats_$Hwt, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_.bc, lty=2)
#lines(newdata$Bwt, conf.band[, 2], col = "blue")
#lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, predict(model.cats_), col = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_.bc, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=Hwt.bc, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_.bc, lty=2)
#lines(newdata$Bwt, conf.band[, 2], col = "blue")
#lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, cats_$Hwt, cats_$Bwt, predict(model.cats_), col = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_.bc, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=Hwt.bc, xlab = "body weight", ylab= 'heart weight', main= 'scatter of cats dataset')
abline(model.cats_.bc, lty=2)
#lines(newdata$Bwt, conf.band[, 2], col = "blue")
#lines(newdata$Bwt, conf.band[, 3], col = "blue")
segments(cats_$Bwt, Hwt.bc, cats_$Bwt, predict(model.cats_.bc), col = 'red')
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_.bc, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=Hwt.bc, xlab = "body weight", ylab= 'Box-Cox heart weight', main= 'scatter of cats dataset')
abline(model.cats_.bc, lty=2)
lines(newdata$Bwt, conf.band[, 2], col = "blue")
conf.band[,2]
newdata$Bwt
newdata = data.frame(Bwt =2:4)
conf.band = predict(model.cats_.bc, newdata, interval = 'confidence')
plot(x=cats_$Bwt, y=Hwt.bc, xlab = "body weight", ylab= 'Box-Cox heart weight', main= 'scatter of cats dataset')
abline(model.cats_.bc, lty=2)
segments(cats_$Bwt, Hwt.bc, cats_$Bwt, predict(model.cats_.bc), col = 'red')
summary(model.cats_)
summary(model.cats
summary(model.cats_)
summary(model.cats_)
summary(model.cats_.bc)
summary(model.cats_)
summary(model.cats_.bc)
shiny::runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
install.packages("DT")
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
shiny.launch.browser
options(shiny.launch.browser =TRUE)
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
install.packages("shinydashboard")
install.packages('plotly')
library(shinydashboard)
library(plotly)
library(shiny)
library(tidyverse)
library(DT)
library(ggplot2)
library(shinydashboard)
library(plotly)
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
options(shiny.launch.browser =TRUE)
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Shiny/shinyApps/shinyDashBoard')
runApp('~/Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
library(shiny)
library(tidyverse)
library(DT)
library(ggplot2)
library(shinydashboard)
library(plotly)
paste0("./archive_inventory_",
as.Date(date(),"YYYY-MM-DD"))
date()
as.Date(date())
as.Date(date(),"YYYYMMDD")
Sys.Date()
paste0("./archive_inventory_",Sys.Date())
paste0("./archive_inventory_",Sys.Date(),".csv")
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
options(shiny.launch.browser =TRUE)
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
numeric
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
shiny::runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
starwars %>% pull(height, name)
starwars
type(starwars %>% pull(height, name))
class(starwars %>% pull(height, name))
class((starwars %>% pull(height, name)))
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
shiny::runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
options(shiny.launch.browser =TRUE)
shiny::runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
head(starwars)
library(tidyverse)
thingy = ""
starwars %>% filter(., name == thingy)
library(tidyverse)
thingy = ""
starwars %>% filter(., if(thingy == "1"){name == thingy})
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp()
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
output$flex_summary <- DT::renderDataTable(
get(input$flex_database) %>%
filter(., Strain == input$flex_strain) %>%
summarise(.,
`Number of Batches` = length(unique(PB_Number)),
`Number of Bags` = length(unique(Unique_Bag_ID)),
`Total Weight` = sum(Weight),
`Freezer Locations` = list(unique(Freezer_ID))) %>%
mutate(., across(.cols = everything(), as.character)) %>%
pivot_longer(., cols = everything(), names_to = "Statistic", values_to = "Value"),
rownames = FALSE
)
if(is.null(input$flex_batch)){
output$flex_summary <- DT::renderDataTable(
get(input$flex_database) %>%
filter(., Strain == input$flex_strain) %>%
summarise(.,
`Number of Batches` = length(unique(PB_Number)),
`Number of Bags` = length(unique(Unique_Bag_ID)),
`Total Weight` = sum(Weight),
`Freezer Locations` = list(unique(Freezer_ID))) %>%
mutate(., across(.cols = everything(), as.character)) %>%
pivot_longer(., cols = everything(), names_to = "Statistic", values_to = "Value"),
rownames = FALSE
)
} else{
#render at batch level
}
output$flex_plot <- renderPlot(
get(input$flex_database) %>%
rowwise() %>%
mutate(., Running_Tally =
if(Type == "Entry"){
Weight * 1
} else if(Type =="Removal") {
Weight * -1
} else {0}) %>%
filter(., Type != "Balance") %>%
filter(., Strain == input$s_overview_strain_id) %>%
ggplot(., aes(x=Date_Added, y = Running_Tally, fill = Type)) +
geom_col(width = 0.9) +
scale_fill_brewer(palette = "Dark2") +
labs(title = paste0("Production History of ",input$s_overview_strain_id),
x = "Cell Mass Changes",
y = "Date Of Modification")
)
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
runApp('Dropbox (Personal)/NYDSA/Work/Projects/Shiny_app/cellpaste_db/cellpaste_db_app')
shiny::runApp()
options(shiny.launch.browser = T)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
